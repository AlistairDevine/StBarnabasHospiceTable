<!--onclick removed for testing purposes-->
<!--Template component tutorial review needed to ensure no missed takes have been made.-->

@using Blazorme
@using StBarnabasHospiceTable.Client.Pages.SessionState
<div class="container-fluid border border-primary" style="text-align:center; width: 100%; height:600px">
    <Split>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5">
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[0]">
                            <a class="oi oi-plus btn" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                    else if (displayButton == false)
                    {
                        <image placeholder="" src=""></image>
                    }
                </SplitPane>
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[1]">
                            <a class="oi oi-plus btn" id="buttonTwo" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                    else if (displayButton == false)
                    {
                        <image placeholder="" src=""></image>
                    }
                </SplitPane>
            </Split>
        </SplitPane>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5">
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[2]">
                            <a class="oi oi-plus btn button3" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                </SplitPane>
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[3]">
                            <a class="oi oi-plus btn button4" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                </SplitPane>
            </Split>
        </SplitPane>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5">
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[4]">
                            <a class="oi oi-plus btn button5" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                </SplitPane>
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane" id="@ButtonIds[5]">
                            <a class="oi oi-plus btn button6" aria-hidden="true" style="border-radius:35%; padding:50px" @onclick="ShowPopup"></a>
                        </div>
                    }
                </SplitPane>
            </Split>
        </SplitPane>
    </Split>
</div>

@if (imagePopup == true)
{
<EditForm Model="@modalInput" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />

    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title"> Select image @idButton.ToString()</h3>
                    <!--Button to close the popup-->
                    <a type="button" class="close oi oi-circle-x" aria-hidden="true" @onclick="ClosePopup"></a>
                </div>
                <div class="modal-body">
                    <!--Selection options dropdown list-->
                    <InputSelect id="image" type="text" @bind-Value="modalInput.Image">
                        <option>--Select--</option>
                        @foreach (var item in Items)
                        {
                        <option value="@item.ItemId">@item.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => modalInput.Image)" />
                </div>
                <div class="modal-footer" style="text-align:center">
                    <button type="submit" class="oi oi-circle-check" aria-hidden="true"> Select </button>
                </div>
            </div>
        </div>
    </div>

</EditForm>
}

<style>
    a.button1 {
        border: 0.1em solid #000000;
        border-radius: 0.12em;
        box-sizing: border-box;
        color: #000000;
    }

        a.button1:hover {
            color: #FFFFFF;
            background-color: #000000;
        }

    .container-pane {
        padding: 70px 0;
        vertical-align: middle
    }
</style>

@code {
    bool displayButton = true;
    List<int> ButtonIds = new List<int>() { 1, 2, 3, 4, 5, 6 };

    Dictionary<string, object> ButtonIdAttribute;
    [Parameter] public int idButton { get; set; }

    bool imagePopup = false;

    void CloseButton()
    {
        displayButton = false;
    }
    void ShowButton()
    {
        displayButton = true;
    }

    void ClosePopup()
    {
        imagePopup = false;
    }
    void ShowPopup()
    {
        imagePopup = true;
    }

    void ValidSubmit()
    {
        ClosePopup();
        CloseButton();
    }

    public List<Item> Items { get; set; } = new List<Item>();

    private Item modalInput = new Item
    {
        Name = "Name of image",
        Description = "Adjective words about the image",
        Image = "url where the image could be found"
    };

    //TODO : OnInitialize method
    protected override void OnInitialized()
    {

    }

    //TODO : Place conditional statements within a different method to be place inside the oninitialized method
    public void SplitPaneIdentity()
    {
        ButtonIdAttribute = new Dictionary<string, object>();

        //Switch statement???
        if (ButtonIds[0] == 1)
        {
            idButton = 1;
        }
        if (ButtonIds[1] == 2)
        {
            idButton = 2;
        }
        if (ButtonIds[2] == 3)
        {
            for (int i = 3; i < 4; i++)
            {
                ButtonIdAttribute["id_" + i] = i;
            }
            ButtonIds[0] = idButton;
        }
        if (ButtonIds[3] == 4)
        {
            for (int i = 4; i < 5; i++)
            {
                ButtonIdAttribute["id_" + i] = i;
            }
            ButtonIds[0] = idButton;
        }
        if (ButtonIds[4] == 5)
        {
            for (int i = 5; i < 6; i++)
            {
                ButtonIdAttribute["id_" + i] = i;
            }
            ButtonIds[0] = idButton;
        }
        if (ButtonIds[5] == 6)
        {
            for (int i = 6; i < 7; i++)
            {
                ButtonIdAttribute["id_" + i] = i;
            }
            ButtonIds[0] = idButton;
        }
        //Dynamic for loop start i number and i length end number???
    }
}
