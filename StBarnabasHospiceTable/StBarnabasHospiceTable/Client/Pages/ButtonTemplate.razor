<!--onclick removed for testing purposes-->
<!--Template component tutorial review needed to ensure no missed takes have been made.-->
@using StBarnabasHospiceTable.Client.Shared
@using StBarnabasHospiceTable.Shared
@using Blazorme
@inject ButtonState ButtonState
<!--State Management for button id-->
@for (int i = 1; i < 3; i++)
{
    <SplitPane>
        <div class="container-pane">
            <a class="oi oi-plus btn button1" aria-hidden="true" @onclick="DialogShow" style="border-radius:35%; padding:50px"></a>
        </div>
    </SplitPane>
    if (i != null)
    {
        buttonId = i;
        <p>@buttonId</p>
        buttonId = 0;
    }
}


<style>
    a.button1 {
        border: 0.1em solid #000000;
        border-radius: 0.12em;
        box-sizing: border-box;
        color: #000000;
    }

        a.button1:hover {
            color: #FFFFFF;
            background-color: #000000;
        }

    .container-pane {
        padding: 70px 0;
        vertical-align: middle
    }
</style>


<!-- TODO : Eventcallback to close the dialog popup??-->
<ButtonDialog />

@code {

    public List<Item> Items { get; set; } = new List<Item>();

    private int buttonId { get; set; }

    /// <summary>
    /// Popup code
    /// </summary>
    bool displayButton = true;
    //public EventCallback<bool> SetDialogPopup { get; set; }

    void CloseButton()
    {
        displayButton = false;
    }
    void ShowButton()
    {
        displayButton = true;
    }

    void ClosePopup()
    {
        showDialog = false;
        StateHasChanged();
    }
    void ShowPopup()
    {
        showDialog = true;
        Console.WriteLine("ShowPopup method worked");
        StateHasChanged();
    }

    protected async Task EventHandleSelect()
    {
        showDialog = false;
        await CloseEventCallback.InvokeAsync(true);
        StateHasChanged();
    }

    bool showDialog = false;
    [Parameter] public EventCallback<bool> CloseEventCallback { get; set; }
    void DialogShow() => showDialog = true;
    void DialogCancel() => showDialog = false;

}
