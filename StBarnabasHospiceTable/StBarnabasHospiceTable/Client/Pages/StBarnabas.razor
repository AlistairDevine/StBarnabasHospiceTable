@page "/barnabas"
@using Blazorme
@using StBarnabasHospiceTable.Shared
@using StBarnabasHospiceTable.Client.Services
@using StBarnabasHospiceTable.Client.Pages.SessionState

<!--State management now call the GetCurrentCount() method to get the current count-->

<style>
    a.button1 {
        border: 0.1em solid #000000;
        border-radius: 0.12em;
        box-sizing: border-box;
        color: #000000;
    }

        a.button1:hover {
            color: #FFFFFF;
            background-color: #000000;
        }

    .container-pane {
        padding: 70px 0;
        vertical-align: middle
    }
</style>

<div class="container-fluid border border-primary" style="text-align:center; width: 100%; height:600px">
    <Split>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5" DefaultMinSize="0">
                @if (displayButton == true)
                {
                    <ButtonTemplate @ref="buttonOne" />
                }
                else if (displayButton == false)
                {
                    <!--Rerender???-->
                    <img alt="itemImage" src="@imageOne" placeholder="" />
                }
            </Split>
        </SplitPane>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5">
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane">
                            <a id="threePane" class="oi oi-plus btn button1" aria-hidden="true" @onclick="ShowPopup" style="border-radius:35%; padding:50px"></a>
                        </div>
                    }
                </SplitPane>
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane">
                            <a id="fourPane" class="oi oi-plus btn button1" aria-hidden="true" @onclick="ShowPopup" style="border-radius:35%; padding:50px"></a>
                        </div>
                    }
                </SplitPane>
            </Split>
        </SplitPane>
        <SplitPane SizeInPercentage="33" MinSize="0">
            <Split Direction="@SplitDirection.Vertical" GutterSize="5">
                <SplitPane MinSize="0">
                    @if (displayButton == true)
                    {
                        <div class="container-pane">
                            <a id="fivePane" class="oi oi-plus btn button1" aria-hidden="true" @onclick="ShowPopup" style="border-radius:35%; padding:50px"></a>
                        </div>
                    }
                </SplitPane>
                <SplitPane MinSize="0">
                    <div class="container-pane">
                        <a id="sixPane" class="oi oi-plus btn button1" aria-hidden="true" @onclick="ShowPopup" style="border-radius:35%; padding:50px"></a>
                    </div>
                </SplitPane>
            </Split>
        </SplitPane>
    </Split>
</div>

<ButtonDialog />

@code {
    /// <summary>
    /// Global variables
    /// </summary>

    //[Inject] public IItemDataService itemService { get; set; }
    public List<Item> Items { get; set; } = new List<Item>();

    /// <summary>
    /// Popup code
    /// </summary>
    [Parameter]public bool imagePopup { get; set; } = false;
    bool displayButton = true;

    void CloseButton()
    {
        displayButton = false;
    }
    void ShowButton()
    {
        displayButton = true;
    }

    void ClosePopup()
    {
        imagePopup = false;
    }
    void ShowPopup()
    {
        imagePopup = true;
    }

    void EventHandleSelect()
    {
        ClosePopup();
        CloseButton();
    }

    /// <summary>
    /// Button / Session State  code
    /// </summary>
    //Have display button1, button2, button3, button4...
    //OR
    //Figure out a reference id type for each button
    public int Count { get; set; }
    //PWD:: Research
    private ButtonTemplate buttonOne;


    /// <summary>
    /// Rendering code
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        ShowPopup();
        ShowButton();
        //Items = (await itemService.GetAllItems()).ToList();

        //if (Count != 0)
        //{
        //    Items = Items.Take(Count).ToList();
        //}

    }
    string imageOne { get; set; }

    Item modelItem { get; set; } = new Item();

    public void modelProcessor()
    {
        modelItem.Image = imageOne;
    }
} 